version: '3'
services:
  # 数据库服务
  mysql:
    container_name: erp-mysql
    image: kabunx/mysql:${MYSQL_VERSION:-latest}
    restart: always
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION:-latest}
        - MYSQL_TIMEZONE=${MYSQL_TIMEZONE:-Asia/Shanghai}
    env_file:
      - ./env/mysql.env
    volumes:
      - ./mysql/initdb.d/:/docker-entrypoint-initdb.d/
      - ${MYSQL_DATA_DIR:-/var/docker/volumes/mysql/}:/var/lib/mysql/
    # docker安全验证
    security_opt:
      - seccomp:unconfined
    ports:
      - ${MYSQL_PORT:-3306}:3306
    networks:
      - database
  # 缓存服务
  redis:
    container_name: erp-redis
    image: redis:${REDIS_TAG:-alpine}
    restart: always
    volumes:
      - ${REDIS_DATA_DIR:-/var/docker/volumes/redis/}:/data/
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - database
  #
  drone-servce:
    container_name: drone-service
    image: drone/drone
    restart: always
    env_file:
      - ./env/drone.env
    volumes:
      - /data/docker/volumes/drone/:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8010:80"
      - "4431:443"
    depends_on:
      - mysql
    networks:
      - database
      - public
  drone-runner:
    container_name: drone-runner
    image: drone/drone-runner-docker
    restart: always
    env_file:
      - ./env/drone-runner.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"
    depends_on:
      - drone-servce
    networks:
      - public

  # 注册&配置中心
  nacos:
    container_name: erp-nacos-standalone
    image: kabunx/nacos:${NACOS_VERSION:-2.0.3}
    build:
      context: ./nacos
      args:
        - NACOS_VERSION=${NACOS_VERSION:-2.0.3}
    restart: always
    env_file:
      - ./env/nacos-mysql.env
    volumes:
      - /data/docker/volumes/nacos/logs/:/home/nacos/logs/
      - ./init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
    depends_on:
      - mysql
    networks:
      - database
      - public

  # 流量控制、熔断降级
  sentinel:
    container_name: erp-sentinel
    image: kabunx/sentinel:${SENTINEL_VERSION:-1.8.2}
    build:
      context: ./sentinel
      args:
        - SENTINEL_VERSION=${SENTINEL_VERSION:-1.8.2}
    restart: always
    volumes:
      - /data/docker/volumes/sentinel/logs/:/home/sentinel/logs/
    ports:
      - "8849:8849"
    networks:
      - public

  # 分布式跟踪系统
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    restart: always
    env_file:
      - ./env/zipkin.env
    ports:
      - "9411:9411"
    depends_on:
      - mysql
    networks:
      - database
      - public

  # 任务调度
  xxl-job-admin:
    container_name: xxl-job-admin
    image: xuxueli/xxl-job-admin:2.3.0
    env_file:
      - ./env/xxl-job-admin.env
    volumes:
      - /data/docker/volumes/xxl/logs/:/data/applogs/
    ports:
      - "8859:8080"
    networks:
      - database
      - public

networks:
  public:
  database: